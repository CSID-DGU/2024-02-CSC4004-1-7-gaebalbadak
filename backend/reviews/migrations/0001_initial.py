# Generated by Django 5.1.2 on 2024-11-08 21:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sentiment',
            fields=[
                ('code', models.AutoField(primary_key=True, serialize=False)),
                ('sentiment_type', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=50, null=True)),
                ('main_image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_checked_at', models.DateTimeField(blank=True, null=True)),
                ('summary_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reviews.restauranttype')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewAuthor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('author_platform_id', models.CharField(max_length=255)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('review_count', models.IntegerField(blank=True, null=True)),
                ('author_score', models.FloatField(blank=True, null=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.platform')),
            ],
            options={
                'unique_together': {('author_platform_id', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('has_reply', models.BooleanField(default=False)),
                ('likes_count', models.IntegerField(blank=True, null=True)),
                ('manual_label_attempted', models.BooleanField(default=False)),
                ('manual_is_true_review', models.BooleanField(blank=True, null=True)),
                ('ai_is_true_review', models.BooleanField(blank=True, null=True)),
                ('analysis_performed_at', models.DateTimeField(blank=True, null=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.restaurant')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reviews.reviewauthor')),
                ('ai_sentiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_sentiment_reviews', to='reviews.sentiment')),
                ('manual_sentiment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manual_sentiment_reviews', to='reviews.sentiment')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantPlatformAnalysis',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('analysis_date', models.DateField()),
                ('ai_review_score', models.FloatField(blank=True, null=True)),
                ('prediction_accuracy', models.FloatField(blank=True, null=True)),
                ('positive_review_ratio', models.FloatField(blank=True, null=True)),
                ('negative_review_ratio', models.FloatField(blank=True, null=True)),
                ('neutral_review_ratio', models.FloatField(blank=True, null=True)),
                ('true_review_ratio', models.FloatField(blank=True, null=True)),
                ('fake_review_ratio', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.platform')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.restaurant')),
            ],
            options={
                'unique_together': {('restaurant', 'analysis_date', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='RestaurantPlatformDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.platform')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.restaurant')),
            ],
            options={
                'unique_together': {('restaurant', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='RestaurantPlatformRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_date', models.DateField()),
                ('rating', models.FloatField(blank=True, null=True)),
                ('review_count', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.platform')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.restaurant')),
            ],
            options={
                'unique_together': {('restaurant', 'platform', 'rating_date')},
            },
        ),
        migrations.CreateModel(
            name='RestaurantPlatformSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positive_summary', models.TextField(blank=True, null=True)),
                ('negative_summary', models.TextField(blank=True, null=True)),
                ('neutral_summary', models.TextField(blank=True, null=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.platform')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.restaurant')),
            ],
            options={
                'unique_together': {('restaurant', 'platform')},
            },
        ),
    ]
